// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String               @id @default(cuid())
  name          String?
  email         String?              @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  role          String?              @default("client") // client, admin
  sessions      Session[]
  wishList      ProductsOnWishList[]
}

model VerificationRequest {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Category {
  id        String                 @id @default(cuid())
  name      String
  createdAt DateTime               @default(now())
  updatedAt DateTime               @updatedAt
  deletedAt DateTime?
  products  ProductsOnCategories[]
}

model Product {
  id         String                 @id @default(cuid())
  name       String
  price      Float
  createdAt  DateTime               @default(now())
  updatedAt  DateTime               @updatedAt
  deletedAt  DateTime?
  categories ProductsOnCategories[]
  images     ProductImage[]
  wishList   ProductsOnWishList[]
}

model ProductsOnCategories {
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String
  product    Product  @relation(fields: [productId], references: [id])
  productId  String

  @@id([categoryId, productId])
}

model ProductImage {
  id        String  @id @default(cuid())
  filename  String
  product   Product @relation(fields: [productId], references: [id])
  productId String
}

model ProductsOnWishList {
  product   Product @relation(fields: [productId], references: [id])
  productId String
  user      User    @relation(fields: [userId], references: [id])
  userId    String

  @@id([productId, userId])
}
